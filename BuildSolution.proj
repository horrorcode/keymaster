<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="ExecuteBuild" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <GlobalRootPath>$(MSBuildProjectDirectory)</GlobalRootPath>
    <SolutionsPath>$(MSBuildProjectDirectory)\src</SolutionsPath>
    <SolutionName>Horror.Keymaster</SolutionName>
    <NugetPackagesPath>$(SolutionsPath)\packages</NugetPackagesPath>
    <BuildEnvironmentPath>$(MSBuildProjectDirectory)\msbuild</BuildEnvironmentPath>
    <Configuration>Release</Configuration>
	

    <!--This property should not changed directly through the file, instead change when running the build script
    Example:
    msbuild myproj.proj /p:IsDesktopBuild=false-->
    <IsDesktopBuild>true</IsDesktopBuild>
    <WorkingDirectoryPath Condition="$(WorkingDirectoryPath) == ''">$(MSBuildProjectDirectory)\build</WorkingDirectoryPath>
    <DropsPath Condition="$(DropsPath) == ''">$(WorkingDirectoryPath)\Drops</DropsPath>
    <NUnitRunner>$(NugetPackagesPath)\NUnit.Runners.2.6.4\tools\nunit-console.exe</NUnitRunner>
    <OpenCoverRunner>$(NugetPackagesPath)\OpenCover.4.5.3427\OpenCover.Console.exe</OpenCoverRunner>
    <ReportGeneratorRunner>$(NugetPackagesPath)\ReportGenerator.2.0.2.0\ReportGenerator.exe</ReportGeneratorRunner>
    <NUnitRunnerWithOpenCoverArguments>/noshadow</NUnitRunnerWithOpenCoverArguments>
  </PropertyGroup>


  <Choose>
    <When Condition="$(IsDesktopBuild) == 'false'">
      <!--Externaal runner location when it is not a desktop build-->
      <PropertyGroup>
        
      </PropertyGroup>
    </When>
    <When  Condition="$(IsDesktopBuild) == 'true'">
      <!--Externaal runner location when it is a desktop build-->
      <PropertyGroup>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- Importing Global properties -->
  <Import Project="$(BuildEnvironmentPath)\GlobalProperties.import"/>

  <!-- Importing third party tasks -->
  <Import Project="$(BuildEnvironmentPath)\GlobalTasks.import"/>

  <!-- Importing targets -->
  <Import Project="$(BuildEnvironmentPath)\GlobalTargets.import"/>

  <Target Name="SettingNUnitTestingAssemblies">
    <ItemGroup>
      <NUnitAssemblies Include="$(TestAssembliesPath)\*Tests.dll" />
    </ItemGroup>
  </Target>

  <Target Name="CoreSettingInstrumentationAssemblies">
    <ItemGroup>
      <AssembliesToInstrument Include="$(TestAssembliesPath)\Horror.Keywords.exe" />
    </ItemGroup>
  </Target>
  
  <Target Name="PrepareFxCop">
    <ItemGroup>
	    <FxCopTargetAssemblies Include="$(BuildingPath)\Horror.Keywords.exe" Exclude="$(BuildingPath)\*Test.dll" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <MyBuildDependsOn>
      ValidateSettings;
      Clean;
      CreateArtefactFolders;
      CoreBuild;
      SettingTestingAssemblies;
      CoreSettingInstrumentationAssemblies;
      RunNUnitTests;
      RunNUnitWithOpenCover;
      <!--ReportNUnitOpenCoverWithRG;
      AnalyzeWithFxCop;-->
    </MyBuildDependsOn>
  </PropertyGroup>
  
  <Target Name="ExecuteBuild" DependsOnTargets="$(MyBuildDependsOn)">
    <Message Text="AssemblyFileVersion is $(FileVersion)" />
    <Message Text="AssemblyInformationalVersion $(InformationalVersion)" />
    <Message Text="AssemblyVersion: $(SemanticVersion)" />
	  <Message Text="Git hash $(VersionControlVersionInformation)" />	
  </Target>
  
  <Target Name="CoreCalculateAdditionalVersionInformation" DependsOnTargets="FormatGitRevisionVersion" />

</Project>
